"""convert_user_progress_id_to_uuid

Revision ID: 7d9d10e55d50
Revises: ae58ef7dadda
Create Date: 2025-11-01 09:35:08.703869

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = '7d9d10e55d50'
down_revision: Union[str, Sequence[str], None] = 'ae58ef7dadda'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # --- PHASE 1: Add Temporary UUID Column ---
    from sqlalchemy.dialects import postgresql
    op.add_column('user_recipe_progress', sa.Column('new_id', postgresql.UUID(as_uuid=True), nullable=True))

    # --- PHASE 2: Data Mapping ---
    import uuid
    conn = op.get_bind()
    user_recipe_progress_table = sa.Table(
        'user_recipe_progress', sa.MetaData(),
        sa.Column('id', sa.Integer, primary_key=True),
        sa.Column('new_id', postgresql.UUID(as_uuid=True)),
        autoload_with=conn
    )
    progress_migration_map = {
        int_id: uuid.uuid5(uuid.NAMESPACE_DNS, f'chefpath_progress_uuid_salt:{int_id}')
        for (int_id,) in conn.execute(sa.select(user_recipe_progress_table.c.id)).fetchall()
    }
    for old_id, new_id in progress_migration_map.items():
        conn.execute(user_recipe_progress_table.update().where(user_recipe_progress_table.c.id == old_id).values(new_id=new_id))

    # --- PHASE 3: Swap/Cleanup ---
    op.drop_column('user_recipe_progress', 'id')
    op.alter_column('user_recipe_progress', 'new_id', new_column_name='id', nullable=False)

    # --- PHASE 4: Reapply Primary Key ---
    op.create_primary_key('user_recipe_progress_pkey', 'user_recipe_progress', ['id'])


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f('ix_weekly_plans_id'), table_name='weekly_plans')
    op.drop_index(op.f('ix_users_id'), table_name='users')
    op.alter_column('user_recipe_progress', 'id',
               existing_type=sa.UUID(),
               type_=sa.INTEGER(),
               existing_nullable=False)
    op.drop_index(op.f('ix_recipes_id'), table_name='recipes')
    # ### end Alembic commands ###
